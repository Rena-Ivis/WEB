{"version":3,"sources":["Image/Profile.svg","Image/Toggle.svg","Image/ToggleActive.svg","Image/buttonInSrc.svg","components/Navigation/Drawer/Drawer.js","components/Navigation/MenuToggle/MenuToggle.js","components/Navigation/Profile/Profile.js","components/Navigation/Search/Search.js","hoc/Layout/Layout.js","containers/Dashboard/Dashboard.js","containers/Tasks/Tasks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","links","to","label","exact","icon","Drawer","state","pathImg","map","link","index","key","activeClassName","className","props","isOpen","Fragment","this","renderLinks","style","paddingLeft","paddingTop","Component","MenuToggle","src","require","alt","onClick","toggleMenuHandler","Profile","borderRadius","Search","name","placeholder","type","Layout","menu","setState","classes","push","join","children","Dashboard","Tasks","all","count","email","company","role","forecast","recentActivity","rows","id","company_name","recent_activity","isChecked","row","forEach","r","checkedElement","class","checked","for","disabled","colspan","display","alignItems","onChange","handleAllChecked","height","color","fontSize","width","removeEmail","removeCompany","removeRole","removeForecast","removeRecentActivity","renderRows","App","path","component","Boolean","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e983cf10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Profile.53cf9beb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Toggle.49abfee8.svg\";","module.exports = __webpack_public_path__ + \"static/media/ToggleActive.6c804c24.svg\";","module.exports = __webpack_public_path__ + \"static/media/buttonInSrc.48236af1.svg\";","import React, {Component} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport './Drawer.css'\r\n\r\nconst links = [\r\n    {to: '/', label: 'Dashboard', exact: true, icon: 'dashboard'},\r\n    {to: '/tasks', label: 'Tasks', exact: true, icon: 'view_agenda'},\r\n    {to: '/email', label: 'Email', exact: true, icon: 'email'},\r\n    {to: '/contacts', label: 'Contacts', exact: true, icon: 'person_outline'},\r\n    {to: '/chat', label: 'Chat', exact: true, icon: 'chat_bubble_outline'},\r\n    {to: '/deals', label: 'Deals', exact: true, icon: 'view_week'},\r\n]\r\n\r\n\r\nclass Drawer extends Component {\r\n    state={\r\n        pathImg: ''\r\n    }\r\n\r\n    renderLinks() {\r\n        return links.map((link, index)=> {\r\n            this.state.pathImg = link.label\r\n            return(\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={'act'}\r\n                    > \r\n                        <i className=\"material-icons-outlined\">{link.icon}</i>\r\n                        {this.props.isOpen?<text className={'MenuText'}>{link.label}</text>:null}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n    return(\r\n        <React.Fragment>\r\n            <nav className={'Drawer'}>\r\n                <ul>\r\n                    {this.renderLinks()}\r\n                </ul>\r\n                <div className='line'/>\r\n                <NavLink\r\n                    to={'/settings'}\r\n                    exact={true}\r\n                    activeClassName={'act'}\r\n                    style={{paddingLeft: '1em', paddingTop: '1em'}}\r\n                >                        \r\n                    <i className=\"material-icons-outlined\">more_horiz</i>\r\n                    {this.props.isOpen?<text className={'MenuText'}>Settings</text>:null}\r\n                </NavLink>\r\n            </nav>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from 'react'\r\nimport './MenuToggle.css'\r\n\r\nclass MenuToggle extends Component {\r\n    render() {\r\n        return(\r\n        <div className={'MenuToggle'}>\r\n            {this.props.isOpen? \r\n                <img src={require('../../../Image/Toggle.svg')} alt='Toggle slidebar' onClick={this.props.toggleMenuHandler}/>: \r\n                <img src={require('../../../Image/ToggleActive.svg')} alt='Toggle slidebar' onClick={this.props.toggleMenuHandler}/>}\r\n            {this.props.isOpen?\r\n                <text className={'open'} onClick={this.props.toggleMenuHandler}>Toggle slidebar</text> :\r\n                <text/>}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n                \r\nexport default MenuToggle","import React, {Component} from 'react'\r\nimport './Profile.css'\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <div className={'Nickname'}>\r\n                    <text>Saas{this.props.isOpen?' Kit':null}</text>\r\n                </div>\r\n                <div className={'MainProfile'}>\r\n                    <img src={require('../../../Image/Profile.svg')} style={{borderRadius: 50}}/>\r\n                    {this.props.isOpen? \r\n                    <div>\r\n                        <text className={'ProfileName'}>Sierra Ferguson</text>\r\n                        <br/>\r\n                        <text className={'EmailAdr'}>s.ferguson@gmail.com</text>\r\n                    </div>:null}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}                  \r\nexport default Profile","import React, {Component} from 'react'\r\nimport './Search.css'\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        return(\r\n            <div className={'Search'}>\r\n                <form>\r\n                    <i className=\"material-icons-outlined\">search</i>\r\n                    <input name=\"search\" placeholder=\"Искать здесь...\" type=\"search\"/>\r\n                    <button type=\"submit\"><img src={require('../../../Image/buttonInSrc.svg')}/></button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}                  \r\nexport default Search","import React, {Component} from 'react';\r\nimport './Layout.css'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\r\nimport Profile from '../../components/Navigation/Profile/Profile';\r\nimport Search from '../../components/Navigation/Search/Search';\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: true\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({menu: !this.state.menu})\r\n    }\r\n\r\n    render() {\r\n        const classes = []\r\n        if(!this.state.menu)\r\n            classes.push('closeMenu')\r\n        else\r\n            classes.push('MenuOpen')\r\n        return (\r\n            <div className={'Layout'}>\r\n                <div className={classes.join(' ')}>\r\n                    <Profile\r\n                        isOpen={this.state.menu}\r\n                    />\r\n                    <Drawer \r\n                        isOpen={this.state.menu}\r\n                    />\r\n                    <MenuToggle\r\n                        isOpen={this.state.menu}\r\n                        toggleMenuHandler={this.toggleMenuHandler}\r\n                    />\r\n                </div>\r\n\r\n                <div className={'WithoutMenu'}>\r\n                    <Search/>\r\n                    <main>\r\n                        {this.props.children}\r\n                    </main>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","import React, {Component} from 'react'\r\nimport './Dashboard.css'\r\n\r\nexport default class Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div className={'Dashboard'}>\r\n                <h1>Dashboard</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport './Tasks.css'\r\n\r\nexport default class Tasks extends Component {\r\n    state={\r\n        all: false,\r\n        count: 0,\r\n        email: true,\r\n        company: true,\r\n        role: true,\r\n        forecast: true,\r\n        recentActivity: true,\r\n        rows: [\r\n            {\r\n                id: 0, \r\n                name: \"Lindsey Stroud\", \r\n                email:'lindsey.stroud@gmail.com', \r\n                company_name:'Hatchbuck', \r\n                role:'Manager', \r\n                forecast:'50 %', \r\n                recent_activity:'5 Minutes ago', \r\n                isChecked: false\r\n            },\r\n            {\r\n                id: 1, \r\n                name: \"Nicci Troiani\", \r\n                email:'nicci.troiani@gmail.com', \r\n                company_name:'Slack', \r\n                role:'Manager', \r\n                forecast:'75 %', \r\n                recent_activity:'14 Minutes ago', \r\n                isChecked: false\r\n            }\r\n          ]\r\n    }\r\n\r\n    checkedElement(row)  {\r\n        this.setState({company:true, email:true, role:true, forecast:true, recentActivity:true})\r\n        let count = this.state\r\n        count = 0\r\n        this.state.rows.forEach(r => {\r\n            if (r.id === row.id)\r\n               r.isChecked = !r.isChecked\r\n            if (r.isChecked)\r\n                count++\r\n         })\r\n        if(count === 0)\r\n            this.setState({all: false})\r\n        else\r\n            this.setState({all: true})\r\n        this.setState({rows: this.state.rows, count})\r\n    }\r\n\r\n    handleAllChecked() {\r\n        this.setState({company:true, email:true, role:true, forecast:true, recentActivity:true})\r\n        let count = this.state\r\n        count = 0\r\n        this.state.rows.forEach(r => {\r\n            r.isChecked = !this.state.all\r\n            if(r.isChecked === true)\r\n                count++\r\n            else\r\n                count--\r\n        })\r\n        this.setState({rows: this.state.rows, all: !this.state.all, count})\r\n    }\r\n\r\n    removeCompany() {\r\n        this.setState({company: !this.state.company})\r\n    }\r\n\r\n    removeEmail() {\r\n        this.setState({email: !this.state.email})\r\n    }\r\n\r\n    removeRole() {\r\n        this.setState({role: !this.state.role})\r\n    }\r\n\r\n    removeForecast(){\r\n        this.setState({forecast: !this.state.forecast})\r\n    }\r\n\r\n    removeRecentActivity(){\r\n        this.setState({recentActivity: !this.state.recentActivity})\r\n    }\r\n\r\n    renderRows(){\r\n        return(\r\n            this.state.rows.map((row) => {\r\n                return (\r\n                    <React.Fragment>\r\n                        <tr className={row.isChecked? 'ActiveTr':'Tr'} onClick={() => this.checkedElement(row)}>\r\n                            <td>\r\n                                <input type=\"checkbox\" class=\"custom-checkbox\" id=\"box\" onClick={() => this.checkedElement(row)} checked={row.isChecked}/>\r\n                                <label for=\"box\"/>\r\n                            </td>\r\n                            <td className={'ImgTh'}><img src={require('../../Image/Profile.svg')}/></td>\r\n                            <td><text className={'Name'}>{row.name}</text></td>\r\n                            <td>{this.state.email?row.email:null}</td>\r\n                            <td>{this.state.company?row.company_name:null}</td>\r\n                            <td>{this.state.role?row.role:null}</td>\r\n                            <td>{this.state.forecast?row.forecast:null}</td>\r\n                            <td>{this.state.recentActivity?row.recent_activity:null}</td>\r\n                        </tr>\r\n                    </React.Fragment>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'Tasks'}>\r\n                <div className={'panel'}>\r\n                    <text>Company: \r\n                        <select>\r\n                            <option>All</option>\r\n                        </select>\r\n                    </text>\r\n\r\n                    <button disabled>Add contact</button>\r\n                </div>\r\n\r\n                <table className=\"Table\">\r\n                    <thead>\r\n                        <tr className={'Tr'}>\r\n                             {this.state.all?\r\n                                <td colspan=\"8\">\r\n                                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                                        <input type=\"checkbox\" class=\"custom-checkbox-count\" id=\"box2\" onChange={()=>this.handleAllChecked()} checked={this.state.all}/>\r\n                                        <label count={this.state.count} for=\"box2\" style={{height: '3em'}}/>                            \r\n                                        <text className={'countSelected'}> {this.state.count} selected</text>\r\n                                        <i className=\"material-icons\" style={{color: '#C2CFE0', fontSize: '1.5em'}}>delete</i>\r\n                                    </div>\r\n                                </td>\r\n                            :\r\n                            <React.Fragment>\r\n                                <td>\r\n                                    <input type=\"checkbox\" class=\"custom-checkbox-count\" id=\"box2\" onChange={()=>this.handleAllChecked()} checked={this.state.all}/>\r\n                                    <label for=\"box2\" style={{height: '3em'}}/> \r\n                                </td>\r\n                                <td colspan=\"2\">Name</td>\r\n                                <td style={{width:'20%'}}>Email\r\n                                    <div className=\"material-icons\" style={{color: '#C2CFE0', fontSize: '1.2em'}} onClick={()=>this.removeEmail()}>{this.state.email?'remove':'add'}</div>\r\n                                </td>\r\n                                <td>Compsny name\r\n                                    <div className=\"material-icons\" style={{color: '#C2CFE0', fontSize: '1.2em'}} onClick={()=>this.removeCompany()}>{this.state.company?'remove':'add'}</div>\r\n                                </td>\r\n                                <td style={{width:'10%'}}>Role\r\n                                    <div className=\"material-icons\" style={{color: '#C2CFE0', fontSize: '1.2em'}} onClick={()=>this.removeRole()}>{this.state.role?'remove':'add'}</div>\r\n                                </td>\r\n                                <td>Forecast\r\n                                    <div className=\"material-icons\" style={{color: '#C2CFE0', fontSize: '1.2em'}} onClick={()=>this.removeForecast()}>{this.state.forecast?'remove':'add'}</div>\r\n                                </td>\r\n                                <td>Recent activity\r\n                                    <div className=\"material-icons\" style={{color: '#C2CFE0', fontSize: '1.2em'}} onClick={()=>this.removeRecentActivity()}>{this.state.recentActivity?'remove':'add'}</div>\r\n                                </td>\r\n                            </React.Fragment>  \r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderRows()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport {Route, Switch} from 'react-router-dom'\nimport Dashboard from './containers/Dashboard/Dashboard'\nimport Tasks from './containers/Tasks/Tasks'\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch> \n        <Route path='/tasks' component={Tasks}/>\n        {/* <Route path='/email' component={}/>\n        <Route path='/contacts' component={}/>\n        <Route path='/chat' component={}/>\n        <Route path='/deals' component={}/>\n        <Route path='/settings' component={}/> */}\n        <Route path='/' component={Dashboard}/>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>\n)\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}