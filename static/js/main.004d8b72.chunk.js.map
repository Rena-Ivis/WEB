{"version":3,"sources":["Image/Profile.svg","Image/Settings.svg","Image/Toggle.svg","Image/ToggleActive.svg","Image/buttonInSrc.svg","Image/src.svg","Image sync /^/.*/.svg$","Image/Chat.svg","Image/ChatActive.svg","Image/Contacts.svg","Image/ContactsActive.svg","Image/Dashboard.svg","Image/DashboardActive.svg","Image/Deals.svg","Image/DealsActive.svg","Image/Email.svg","Image/EmailActive.svg","Image/SettingsActive.svg","Image/Tasks.svg","Image/TasksActive.svg","hoc/Layout/Layout.js","containers/Dashboard/Dashboard.js","containers/Tasks/Tasks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","links","to","label","exact","Layout","state","menu","pathImg","toggleMenuHandler","setState","link","index","key","activeClassName","src","require","className","classes","this","push","join","style","borderRadius","renderLinks","paddingLeft","paddingTop","alt","onClick","name","placeholder","type","props","children","Component","Dashboard","Tasks","App","path","component","Boolean","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.004d8b72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Profile.53cf9beb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Settings.afc89239.svg\";","module.exports = __webpack_public_path__ + \"static/media/Toggle.49abfee8.svg\";","module.exports = __webpack_public_path__ + \"static/media/ToggleActive.6c804c24.svg\";","module.exports = __webpack_public_path__ + \"static/media/buttonInSrc.48236af1.svg\";","module.exports = __webpack_public_path__ + \"static/media/src.3241f743.svg\";","var map = {\n\t\"./Chat.svg\": 39,\n\t\"./ChatActive.svg\": 40,\n\t\"./Contacts.svg\": 41,\n\t\"./ContactsActive.svg\": 42,\n\t\"./Dashboard.svg\": 43,\n\t\"./DashboardActive.svg\": 44,\n\t\"./Deals.svg\": 45,\n\t\"./DealsActive.svg\": 46,\n\t\"./Email.svg\": 47,\n\t\"./EmailActive.svg\": 48,\n\t\"./Profile.svg\": 18,\n\t\"./Settings.svg\": 19,\n\t\"./SettingsActive.svg\": 49,\n\t\"./Tasks.svg\": 50,\n\t\"./TasksActive.svg\": 51,\n\t\"./Toggle.svg\": 20,\n\t\"./ToggleActive.svg\": 21,\n\t\"./buttonInSrc.svg\": 22,\n\t\"./src.svg\": 23\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 38;","module.exports = __webpack_public_path__ + \"static/media/Chat.ecccb54c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ChatActive.7cf0e676.svg\";","module.exports = __webpack_public_path__ + \"static/media/Contacts.e57581bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/ContactsActive.792f1d7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Dashboard.455384fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/DashboardActive.7e325124.svg\";","module.exports = __webpack_public_path__ + \"static/media/Deals.bb8b21f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/DealsActive.0f734e14.svg\";","module.exports = __webpack_public_path__ + \"static/media/Email.c75f4479.svg\";","module.exports = __webpack_public_path__ + \"static/media/EmailActive.3fbb0fe3.svg\";","module.exports = __webpack_public_path__ + \"static/media/SettingsActive.ffabc5a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Tasks.284bf0ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/TasksActive.1df791af.svg\";","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport './Layout.css'\r\n\r\nconst links = [\r\n    {to: '/', label: 'Dashboard', exact: true},\r\n    {to: '/tasks', label: 'Tasks', exact: true},\r\n    {to: '/email', label: 'Email', exact: true},\r\n    {to: '/contacts', label: 'Contacts', exact: true},\r\n    {to: '/chat', label: 'Chat', exact: true},\r\n    {to: '/deals', label: 'Deals', exact: true},\r\n]\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: true,\r\n        pathImg: ''\r\n    }\r\n\r\n    renderLinks() {\r\n        return links.map((link, index)=> {\r\n            this.state.pathImg = link.label\r\n            return(\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={'act'}\r\n                    >                        \r\n                        <img src={require(`../../Image/${this.state.pathImg}.svg`)}/>\r\n                        {this.state.menu?<text className={'MenuText'}>{link.label}</text>:null}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({menu: !this.state.menu})\r\n    }\r\n\r\n    render() {\r\n        const classes = []\r\n        if(!this.state.menu)\r\n            classes.push('closeMenu')\r\n        else\r\n            classes.push('MenuOpen')\r\n        return (\r\n            <div className={'Layout'}>\r\n                <div className={classes.join(' ')}>\r\n                    <div className={'Nickname'}>\r\n                        <text>Saas{this.state.menu?' Kit':null}</text>\r\n                    </div>\r\n                    <div className={'MainProfile'}>\r\n                        <img src={require('../../Image/Profile.svg')} style={{borderRadius: 50}}/>\r\n                        {this.state.menu? \r\n                        <div>\r\n                            <text className={'ProfileName'}>Sierra Ferguson</text>\r\n                            <br/>\r\n                            <text className={'EmailAdr'}>s.ferguson@gmail.com</text>\r\n                        </div>:null}\r\n                    </div>\r\n                    <div>\r\n                        <nav className={'Drawer'}>\r\n                            <ul>\r\n                                {this.renderLinks()}\r\n                            </ul>\r\n                            <div className='line'/>\r\n                                    <NavLink\r\n                                        to={'/settings'}\r\n                                        exact={true}\r\n                                        activeClassName={'act'}\r\n                                        style={{paddingLeft: '1em', paddingTop: '1em'}}\r\n                                    >                        \r\n                                        <img src={require(`../../Image/Settings.svg`)}/>\r\n                                        {this.state.menu?<text className={'MenuText'}>Settings</text>:null}\r\n                                    </NavLink>\r\n                        </nav>\r\n                    </div>\r\n                    <div className={'MenuToggle'}>\r\n                        {this.state.menu? \r\n                            <img src={require('../../Image/Toggle.svg')} alt='Toggle slidebar' onClick={this.toggleMenuHandler}/>: \r\n                            <img src={require('../../Image/ToggleActive.svg')} alt='Toggle slidebar' onClick={this.toggleMenuHandler}/>}\r\n                        {this.state.menu?\r\n                            <text className={'open'} onClick={this.toggleMenuHandler}>Toggle slidebar</text> :\r\n                            <text/>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={'WithoutMenu'}>\r\n                    <div className={'Search'}>\r\n                        <form>\r\n                            <img src={require('../../Image/src.svg')}/>\r\n                            <input name=\"search\" placeholder=\"Искать здесь...\" type=\"search\"/>\r\n                            <button type=\"submit\"><img src={require('../../Image/buttonInSrc.svg')}/></button>\r\n                        </form>\r\n                    </div>\r\n                    <main>\r\n                        {this.props.children}\r\n                    </main>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","import React, {Component} from 'react'\r\nimport './Dashboard.css'\r\n\r\nexport default class Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div className={'Dashboard'}>\r\n                <h1>Dashboard</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport './Tasks.css'\r\n\r\nexport default class Tasks extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Tasks</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport {Route, Switch} from 'react-router-dom'\nimport Dashboard from './containers/Dashboard/Dashboard'\nimport Tasks from './containers/Tasks/Tasks'\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch> \n        <Route path='/tasks' component={Tasks}/>\n        {/* <Route path='/email' component={}/>\n        <Route path='/contacts' component={}/>\n        <Route path='/chat' component={}/>\n        <Route path='/deals' component={}/>\n        <Route path='/settings' component={}/> */}\n        <Route path='/' component={Dashboard}/>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>\n)\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}